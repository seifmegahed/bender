/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 23.gltf -t s 
*/

import * as THREE from 'three'
import { useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'

type GLTFResult = GLTF & {
  nodes: {
    PlateB: THREE.Mesh
    PlateA: THREE.Mesh
    PCB_1: THREE.Mesh
    PCB_2: THREE.Mesh
    Knob1_1: THREE.Mesh
    Knob1_2: THREE.Mesh
    Knob4_1: THREE.Mesh
    Knob4_2: THREE.Mesh
    Knob5_1: THREE.Mesh
    Knob5_2: THREE.Mesh
    Knob6_1: THREE.Mesh
    Knob6_2: THREE.Mesh
    Knob3_1: THREE.Mesh
    Knob3_2: THREE.Mesh
    Knob2_1: THREE.Mesh
    Knob2_2: THREE.Mesh
    Plane: THREE.Mesh
  }
  materials: {
    ['Aluminum_-_Anodized_Glossy_(Grey)']: THREE.MeshStandardMaterial
    ['Material.003']: THREE.MeshStandardMaterial
    ['Aluminum_-_Anodized_Rough_(Blue)']: THREE.MeshStandardMaterial
    Material: THREE.MeshStandardMaterial
    ['Aluminum_-_Anodized_Glossy_(Blue)']: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
  }
}

// type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const [rotate, setRotate] = useState(0);
  const { nodes, materials } = useGLTF('/23.gltf') as GLTFResult
  useFrame(() => {
    setRotate((rotation) => rotation += 0.002)
  })
  return (
    <group {...props} dispose={null} castShadow={true}>
      <mesh geometry={nodes.PlateB.geometry} material={materials['Aluminum_-_Anodized_Glossy_(Grey)']} position={[0.395, -0.354, 0.549]} scale={0.064} castShadow={true}/>
      <mesh geometry={nodes.PlateA.geometry} material={materials['Material.003']} position={[0.126, 0.597, -0.292]} scale={0.064} castShadow={true} />
      <group position={[1.327, 0.06, 2.178]} scale={0.064}>
        <mesh geometry={nodes.PCB_1.geometry} material={materials['Aluminum_-_Anodized_Rough_(Blue)']} />
        <mesh geometry={nodes.PCB_2.geometry} material={materials.Material} />
      </group>
      <group position={[-2.207, 1.241, -2.423]} scale={0.064}>
        <mesh geometry={nodes.Knob1_1.geometry} material={materials['Aluminum_-_Anodized_Glossy_(Blue)']} />
        <mesh geometry={nodes.Knob1_2.geometry} material={materials['Material.001']} />
      </group>
      <group position={[-2.207, 1.241, 0.169]} scale={0.064}>
        <mesh geometry={nodes.Knob4_1.geometry} material={materials['Aluminum_-_Anodized_Glossy_(Blue)']} />
        <mesh geometry={nodes.Knob4_2.geometry} material={materials['Material.001']} />
      </group>
      <group position={[0.037, 1.241, 0.169]} scale={0.064}>
        <mesh geometry={nodes.Knob5_1.geometry} material={materials['Aluminum_-_Anodized_Glossy_(Blue)']} />
        <mesh geometry={nodes.Knob5_2.geometry} material={materials['Material.001']} />
      </group>
      <group position={[2.281, 1.241, 0.169]} scale={0.064}>
        <mesh geometry={nodes.Knob6_1.geometry} material={materials['Aluminum_-_Anodized_Glossy_(Blue)']} />
        <mesh geometry={nodes.Knob6_2.geometry} material={materials['Material.001']} />
      </group>
      <group position={[2.281, 1.241, -2.423]} scale={0.064}>
        <mesh geometry={nodes.Knob3_1.geometry} material={materials['Aluminum_-_Anodized_Glossy_(Blue)']} />
        <mesh geometry={nodes.Knob3_2.geometry} material={materials['Material.001']} />
      </group>
      <group position={[0.037, 1.241, -2.423]} rotation={[0,rotate,0]} scale={0.064}>
        <mesh geometry={nodes.Knob2_1.geometry} material={materials['Aluminum_-_Anodized_Glossy_(Blue)']} />
        <mesh geometry={nodes.Knob2_2.geometry} material={materials['Material.001']} />
      </group>
      <mesh geometry={nodes.Plane.geometry} material={materials['Material.002']} position={[0, 0.835, 0.253]} scale={[3.14, 1, 4.326]} />
    </group>
  )
}

useGLTF.preload('/23.gltf')
